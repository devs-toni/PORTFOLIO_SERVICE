name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run the tests and generate coverage report
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

    - name: Build
      run: npm run build

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & push
      uses: docker/build-push-action@v3
      with:
        context: .
        dockerfile: Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bianxi-api:${{ env.NEXT_RELEASE }}

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1.12.0
      with:
        tag: ${{ env.NEXT_RELEASE }}
        token: ${{ secrets.GITHUB_TOKEN }}

#   - name: Deploy
#     run: |
#       git config --global user.name devs-toni
#       git config --global user.email devs.toni@gmail.com
#       git remote set-url origin https://${github_token}@github.com/${repository}
#       npm run deploy
#     env:
#       user_name: 'github-actions[bot]'
#       user_email: 'github-actions[bot]@users.noreply.github.com'
#       github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
#       repository: ${{ github.repository }}