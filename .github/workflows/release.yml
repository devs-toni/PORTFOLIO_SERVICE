name: CI
on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
  
    permissions: 
      contents: write
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.0
          cache: 'npm'

      - name: Install dependencies
        run: npm i
        env:
          CI: true
        
      - name: Configure Git User
        run: | 
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Get package version
        run: |
          NEXT_RELEASE=$(jq '.version' package.json | sed 's/-SNAPSHOT.0//' | xargs npm version --no-git-tag-version | sed 's/v//')
          echo "NEXT_RELEASE=$NEXT_RELEASE" >> $GITHUB_ENV
        shell: bash

      - name: Build Integration
        run: npm run build:int

      - name: Build Production
        run: npm run build:prod

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'arcprojects-v2-*.zip'
          generateReleaseNotes: true
          tag: ${{ env.NEXT_RELEASE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create SNAPSHOT
        run: npm version prerelease --preid SNAPSHOT --no-git-tag-version

      - name: Update version in remote
        run: |
          git add package.json
          git add package-lock.json
          git commit -m "chore: prepare snapshot"
          git push














#name: CD
#
#on:
#  push:
#    branches: [master]
#  pull_request:
#    branches: [master]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest

 #   strategy:
 #     matrix:
 #       node-version: [16.x]
#
 #   steps:
 #     - name: Checkout repository
 #       uses: actions/checkout@v2
#
 #     - name: Set up Node.js $#{{ matrix.node-version }}
 #       uses: actions/setup-node@v1
 #       with:
 #         node-version: $#{{ matrix.node-version }}
#
 #     - name: Install dependencies
 #       run: npm install
#
 #     - name: Build
 #       run: npm run build
#
 #     - name: Login to Docker Hub
 #       uses: docker/login-action@v2
 #       with:
 #         username: $#{{ secrets.DOCKER_USERNAME }}
 #         password: $#{{ secrets.DOCKER_PASSWORD }}
#
 #     - name: Build & push
 #       uses: docker/build-push-action@v3
 #       with:
 #         context: .
 #         dockerfile: Dockerfile
 #         push: true
 #         tags: $#{{ secrets.DOCKER_USERNAME }}/arcp:0.1.0

#   - name: Deploy
#     run: |
#       git config --global user.name devs-toni
#       git config --global user.email devs.toni@gmail.com
#       git remote set-url origin https://${github_token}@github.com/${repository}
#       npm run deploy
#     env:
#       user_name: 'github-actions[bot]'
#       user_email: 'github-actions[bot]@users.noreply.github.com'
#       github_token: $#{{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
#       repository: $#{{ github.repository }}
